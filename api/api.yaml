openapi: 3.1.0
servers:
  - url: 'https://net-worth-tracker-api.herokuapp.com'
info:
  description: >-
    This API is to serve the new worth platform web and mobile. An REST API built to be fast, flexible and simple.
  version: 0.1.1-alpha
  title: Net Worth Tracker API
  contact:
    name: WeNeedThePoh
    url: 'https://github.com/WeNeedThePoh'
paths:
  /health:
    get:
      summary: Health check endpoint
      tags:
       - health
      responses:
        200:
          description: All systems are in good health
          content:
            application/json:
              schema:
                $ref: 'schemas/health_response.yaml'
              example:
                $ref: 'examples/health_response.json'
        503:
          description: All or some systems are not responding or throwing errors
          content:
            application/json:
              schema:
                $ref: 'schemas/health_response.yaml'
              example:
                $ref: 'examples/health_response_error.json'
  /sign-in:
    post:
      summary: Social sign-in
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/sign_in_post.yaml'
            example:
              $ref: 'examples/sign_in_post.json'
      responses:
        '204':
          description: JWT Token and expire date
          content:
            application/json:
              schema:
                $ref: 'schemas/sign_in_response.yaml'
              example:
                $ref: 'examples/sign_in_response.json'
  /users:
    post:
      summary: Create new user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user/post.yaml'
            example:
              $ref: 'examples/user/post.json'
      responses:
        '201':
          description: New user data
          content:
            application/json:
              schema:
                $ref: 'schemas/user/model.yaml'
              example:
                $ref: 'examples/user/model.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/user/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
    get:
      summary: Fetch user data
      tags: 
        - users
      responses:
        '200':
          description: User's data
          content:
            application/json:
              schema:
                $ref: 'schemas/user/model.yaml'
              example:
                $ref: 'examples/user/model.json'
    patch:
      summary: Update user data
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/user/patch.yaml'
            example:
              $ref: 'examples/user/patch.json'
      responses:
        '204':
          description: Successfuly updated user data
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/user/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/user/error.yaml'
              example:
                $ref: 'examples/error.json'
    delete:
      tags:
        - users
      responses:
        '204':
          description: Successfuly deleted user data
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/user/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/user/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}/accounts:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
    post:
      summary: Create new money account
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/account/post.yaml'
            example:
              $ref: 'examples/account/post.json'
      responses:
        '201':
          description: New account data
          content:
            application/json:
              schema:
                $ref: 'schemas/account/model.yaml'
              example:
                $ref: 'examples/account/model.json'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
    get:
      summary: Fetch all user money accounts
      tags:
        - accounts
      responses:
        '200':
          description: User's money accounts
          content:
            application/json:
              schema:
                $ref: 'schemas/account/model.yaml'
              example:
                $ref: 'examples/account/all.json'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}/accounts/{account_id}:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    get:
      summary: Fetch money account data
      tags:
        - accounts
      responses:
        '200':
          description: User's money account
          content:
            application/json:
              schema:
                $ref: 'schemas/account/model.yaml'
              example:
                $ref: 'examples/account/model.json'
        '404':
          description: User/Account not found
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
    patch:
      summary: Update money account data
      tags:
        - accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/account/patch.yaml'
            example:
              $ref: 'examples/account/patch.json'
      responses:
        '204':
          description: Successfuly updated money account
        '404':
          description: User/Account not found
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
    delete:
      tags:
        - accounts
      responses:
        '204':
          description: Successfuly deleted money account
        '404':
          description: User/Account not found
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/account/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}/accounts/{account_id}/transactions:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
    post:
      summary: Create new transaction
      tags:
        - accounts
        - transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/transaction/post.yaml'
            example:
              $ref: 'examples/transaction/post.json'
      responses:
        '201':
          description: New transaction data
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/model.yaml'
              example:
                $ref: 'examples/transaction/model.json'
        '404':
          description: User/Account not found
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
    get:
      summary: Fetch all transactions
      tags:
        - accounts
        - transactions
      responses:
        '200':
          description: Account transactions
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/model.yaml'
              example:
                $ref: 'examples/transaction/all.json'
        '404':
          description: User/Account not found
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}/accounts/{account_id}/transactions/{transaction_id}:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
      - in: path
        name: account_id
        required: true
        schema:
          type: integer
      - in: path
        name: transaction_id
        required: true
        schema:
          type: integer
    get:
      summary: Fetch transaction data
      tags:
        - accounts
        - transactions
      responses:
        '200':
          description: Money account transaction
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/model.yaml'
              example:
                $ref: 'examples/transaction/model.json'
        '404':
          description: User/Account/Transaction not found
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
    patch:
      summary: Update money account transaction data
      tags:
        - accounts
        - transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/transaction/patch.yaml'
            example:
              $ref: 'examples/transaction/patch.json'
      responses:
        '204':
          description: Successfuly updated money account transaction
        '404':
          description: User/Account/Transaction not found
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
    delete:
      tags:
        - accounts
        - transactions
      responses:
        '204':
          description: Successfuly deleted money account transaction
        '404':
          description: User/Account/Transaction not found
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/transaction/error.yaml'
              example:
                $ref: 'examples/error.json'
  /account-types:
    get:
      summary: Fetch existing money account types
      tags:
        - accounts
      responses:
        '200':
          description: Money account types
          content:
            application/json:
              schema:
                $ref: 'schemas/account/types.yaml'
              example:
                $ref: 'examples/account/types.json'
  /account-icons:
    get:
      summary: Fetch existing money account icons
      tags:
        - accounts
      responses:
        '200':
          description: Money account icons
          content:
            application/json:
              schema:
                $ref: 'schemas/account/icons.yaml'
              example:
                $ref: 'examples/account/icons.json'
  /users/{user_id}/categories:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
    post:
      summary: Create new category
      tags:
        - categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/category/post.yaml'
            example:
              $ref: 'examples/category/post.json'
      responses:
        '201':
          description: New category data
          content:
            application/json:
              schema:
                $ref: 'schemas/category/model.yaml'
              example:
                $ref: 'examples/category/model.json'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
    get:
      summary: Fetch all user categories
      tags:
        - categories
      responses:
        '200':
          description: User's categories
          content:
            application/json:
              schema:
                $ref: 'schemas/category/model.yaml'
              example:
                $ref: 'examples/category/all.json'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
  /users/{user_id}/categories/{category_id}:
    parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: integer
      - in: path
        name: category_id
        required: true
        schema:
          type: integer
    get:
      summary: Fetch category data
      tags:
        - categories
      responses:
        '200':
          description: User's category
          content:
            application/json:
              schema:
                $ref: 'schemas/category/model.yaml'
              example:
                $ref: 'examples/category/model.json'
        '404':
          description: User/Category not found
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
    patch:
      summary: Update user category
      tags:
        - categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/category/patch.yaml'
            example:
              $ref: 'examples/category/patch.json'
      responses:
        '204':
          description: Successfuly updated category
        '404':
          description: User/Category not found
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
    delete:
      tags:
        - categories
      responses:
        '204':
          description: Successfuly deleted user category
        '404':
          description: User/Category not found
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
        '400':
          description: Expected error happened
          content:
            application/json:
              schema:
                $ref: 'schemas/category/error.yaml'
              example:
                $ref: 'examples/error.json'
  /category-icons:
    get:
      summary: Fetch existing category icons
      tags:
        - categories
      responses:
        '200':
          description: Category icons
          content:
            application/json:
              schema:
                $ref: 'schemas/category/icons.yaml'
              example:
                $ref: 'examples/category/icons.json'
  /currencies:
    get:
      summary: Fetch existing currencies
      responses:
        '200':
          description: Currencies
          content:
            application/json:
              schema:
                $ref: 'schemas/currencies.yaml'
              example:
                $ref: 'examples/currencies.json'